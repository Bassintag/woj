generator js {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Recipe {
  id           Int     @id @default(autoincrement())
  name         String
  preppingTime Int?
  cookingTime  Int?
  imagePath    String?

  ingredients   RecipeIngredient[]
  steps         Step[]
  shoppingLists ShoppingList[]
  tags          Tag[]              @relation()
}

model Tag {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  recipes Recipe[]
}

model Step {
  id          Int    @id @default(autoincrement())
  description String
  recipeId    Int
  order       Int

  recipe Recipe @relation(fields: [recipeId], references: [id])
}

model Ingredient {
  id        Int     @id @default(autoincrement())
  name      String
  energy    Int?
  imagePath String?
  unitId    Int

  unit              Unit               @relation(fields: [unitId], references: [id])
  recipeIngredients RecipeIngredient[]
  shoppingItems     ShoppingItem[]
}

model RecipeIngredient {
  id           Int   @id @default(autoincrement())
  quantity     Float
  recipeId     Int
  ingredientId Int

  recipe     Recipe     @relation(fields: [recipeId], references: [id])
  ingredient Ingredient @relation(fields: [ingredientId], references: [id])
}

model Unit {
  id   Int    @id @default(autoincrement())
  name String

  ingredients Ingredient[]
  symbols     Symbol[]
}

model Symbol {
  id     Int    @id @default(autoincrement())
  name   String
  unitId Int
  digits Int    @default(0)
  factor Float
  min    Float?
  max    Float?

  unit Unit @relation(fields: [unitId], references: [id])
}

model ShoppingList {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  recipes Recipe[]       @relation()
  items   ShoppingItem[]
}

model ShoppingItem {
  id             Int     @id @default(autoincrement())
  name           String
  purchased      Boolean @default(false)
  order          Int
  shoppingListId Int
  ingredientId   Int?

  ingredient   Ingredient?  @relation(fields: [ingredientId], references: [id])
  shoppingList ShoppingList @relation(fields: [shoppingListId], references: [id])
}
